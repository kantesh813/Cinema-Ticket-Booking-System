
package cinematicketbookingsystem.Forms.CustomerForms;

import cinematicketbookingsystem.Forms.Login;
import cinematicketbookingsystem.Utility;
import java.awt.Component;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.DefaultCellEditor;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;


public class CartForm extends javax.swing.JFrame {

  
    public CartForm() {
        initComponents();
        populateCartData();
    }
    
    private void populateCartData() {
        tbl_CartData.removeAll();
        double totalPrice = 0;
        Object[][] data = new Object[Utility.cartData.size()][];
        for (int i = 0; i < Utility.cartData.size(); i++) {
            data[i] = new Object[]{i + 1, Utility.cartData.get(i).getMovie().getM_Name(), Utility.databaseInteraction.getHallDataById(Utility.cartData.get(i).getMovie().getM_HId()).getH_Name(),
                Utility.cartData.get(i).getSeatNumber(), Utility.cartData.get(i).getMovie().getM_Date() + " - " + Utility.cartData.get(i).getMovie().getM_Time(), Utility.cartData.get(i).getMovie().getM_Price(),
                "Delete"
            };
            totalPrice += Utility.cartData.get(i).getMovie().getM_Price();
        }
        
        String[] columns = {
            "SNO", "Movie Name", "Hall Name", "Seat Number", "DateTime", "Price", "Delete"
        };
        
        DefaultTableModel tmodel = new DefaultTableModel(data, columns) {
            @Override
            public Class getColumnClass(int column) {
                return getValueAt(0, column).getClass();
            }
        };
        
        tbl_CartData.setModel(tmodel);
        lbl_TotalPrice.setText("₪ : " + totalPrice);
        tbl_CartData.getColumn("Delete").setCellRenderer(new CartForm.ButtonRenderer(this));
        tbl_CartData.getColumn("Delete").setCellEditor(new CartForm.ButtonEditor(this, new JCheckBox()));
        tbl_CartData.setRowHeight(50);
        if (Utility.cartData.isEmpty()) {
            btn_Checkout.setEnabled(false);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btn_MainView = new javax.swing.JButton();
        lbl_TotalPrice = new javax.swing.JLabel();
        btn_Logout = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_CartData = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btn_Checkout = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Cart");

        btn_MainView.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 3, 18)); // NOI18N
        btn_MainView.setText("Main");
        btn_MainView.setBorder(new javax.swing.border.MatteBorder(null));
        btn_MainView.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_MainView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_MainViewActionPerformed(evt);
            }
        });

        lbl_TotalPrice.setFont(new java.awt.Font("Tahoma", 3, 36)); // NOI18N
        lbl_TotalPrice.setForeground(new java.awt.Color(51, 51, 255));
        lbl_TotalPrice.setText("₪ 123.00");
        lbl_TotalPrice.setToolTipText("Cart");

        btn_Logout.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 3, 18)); // NOI18N
        btn_Logout.setText("Logout");
        btn_Logout.setBorder(new javax.swing.border.MatteBorder(null));
        btn_Logout.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_Logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_LogoutActionPerformed(evt);
            }
        });

        tbl_CartData.setFont(new java.awt.Font("Ink Free", 0, 14)); // NOI18N
        tbl_CartData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"1", "Harry Potter", "Hall 1", "1", "04-03-2022 01:01:01", "123"},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "S No", "Name", "Hall ", "Seat Number", "Date Time", "Price"
            }
        ));
        tbl_CartData.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_CartDataMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbl_CartData);

        jLabel2.setFont(new java.awt.Font("Ink Free", 3, 36)); // NOI18N
        jLabel2.setText("Cart");

        jLabel3.setFont(new java.awt.Font("Ink Free", 3, 36)); // NOI18N
        jLabel3.setText("Total Price: ");

        btn_Checkout.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 3, 18)); // NOI18N
        btn_Checkout.setText("CheckOut");
        btn_Checkout.setBorder(new javax.swing.border.MatteBorder(null));
        btn_Checkout.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_Checkout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_CheckoutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel3)
                        .addGap(33, 33, 33)
                        .addComponent(lbl_TotalPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 637, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 12, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btn_MainView, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(148, 148, 148)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_Logout, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btn_Checkout, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(207, 207, 207))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btn_MainView, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_Logout, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_TotalPrice)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addComponent(btn_Checkout, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btn_MainViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_MainViewActionPerformed
        // TODO add your handling code here:
        this.dispose();
        new MainCustomerView().setVisible(true);
    }//GEN-LAST:event_btn_MainViewActionPerformed

    private void btn_LogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_LogoutActionPerformed
        // TODO add your handling code here:
        this.dispose();
        new Login().setVisible(true);
    }//GEN-LAST:event_btn_LogoutActionPerformed

    private void btn_CheckoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_CheckoutActionPerformed
        // TODO add your handling code here:

        this.dispose();
        new PaymentMethod().setVisible(true);
    }//GEN-LAST:event_btn_CheckoutActionPerformed

    private void tbl_CartDataMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_CartDataMouseClicked
        // TODO add your handling code here:
        //populateCartData();
    }//GEN-LAST:event_tbl_CartDataMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CartForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CartForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CartForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CartForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CartForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_Checkout;
    private javax.swing.JButton btn_Logout;
    private javax.swing.JButton btn_MainView;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbl_TotalPrice;
    private javax.swing.JTable tbl_CartData;
    // End of variables declaration//GEN-END:variables

    class ButtonRenderer extends JButton implements TableCellRenderer {
        
        private CartForm cart;
        
        public ButtonRenderer(CartForm f) {
            setOpaque(true);
            cart = f;
        }
        
        @Override
        public Component getTableCellRendererComponent(JTable table, Object value,
                boolean isSelected, boolean hasFocus, int row, int column) {
            if (isSelected) {
                setForeground(table.getSelectionForeground());
                setBackground(table.getSelectionBackground());
            } else {
                setForeground(table.getForeground());
                setBackground(UIManager.getColor("Button.background"));
            }
            setText((value == null) ? "" : value.toString());
            return this;
        }
    }
    
    class ButtonEditor extends DefaultCellEditor {
        
        protected JButton button;
        private String label;
        private boolean isPushed;
        private CartForm cart;
        
        public ButtonEditor(CartForm f, JCheckBox checkBox) {
            super(checkBox);
            cart = f;
            button = new JButton();
            button.setOpaque(true);
            button.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    fireEditingStopped();
                }
            });
        }
        
        @Override
        public Component getTableCellEditorComponent(JTable table, Object value,
                boolean isSelected, int row, int column) {
            if (isSelected) {
                button.setForeground(table.getSelectionForeground());
                button.setBackground(table.getSelectionBackground());
            } else {
                button.setForeground(table.getForeground());
                button.setBackground(table.getBackground());
            }
            label = (value == null) ? "" : value.toString();
            button.setText(label);
            isPushed = true;
            //   JOptionPane.showMessageDialog(button, label + ""+table.getModel().getValueAt(row, 1));
            //  Utility.databaseInteraction.delteHallData((int) table.getModel().getValueAt(row, 1));
            //  JOptionPane.showConfirmDialog(null, row);
            try {
                if (!Utility.cartData.isEmpty() && row >= 0 && row < Utility.cartData.size()) {
                    Utility.cartData.remove(row);
                    JOptionPane.showConfirmDialog(null, "Successfully Deleted", "Success", JOptionPane.DEFAULT_OPTION, JOptionPane.INFORMATION_MESSAGE);
                    cart.setVisible(false);
                    new CartForm().setVisible(true);
                }
            } catch (Exception ex) {
            }
            return button;
        }
        
        @Override
        public Object getCellEditorValue() {
            if (isPushed) {
                //   JOptionPane.showMessageDialog(button, label + ": Ouch!");

            }
            isPushed = false;
            return label;
        }
        
        @Override
        public boolean stopCellEditing() {
            isPushed = false;
            return super.stopCellEditing();
            
        }
    }
}
