
package cinematicketbookingsystem.Forms.AdminForms;

import cinematicketbookingsystem.Forms.Login;
import cinematicketbookingsystem.Model.Movie;
import cinematicketbookingsystem.Utility;
import java.awt.Component;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import javax.swing.DefaultCellEditor;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;


public class ViewAllMovies extends javax.swing.JFrame {

    /**
     * Creates new form ViewAllMovies
     */
    public ViewAllMovies() {
        initComponents();
        populateMovieData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btn_AddMovie = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_MovieData = new javax.swing.JTable();
        btn_Logout1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        btn_MainView = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("View All Movies");

        btn_AddMovie.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 3, 18)); // NOI18N
        btn_AddMovie.setText("Add Movie");
        btn_AddMovie.setBorder(new javax.swing.border.MatteBorder(null));
        btn_AddMovie.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_AddMovie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_AddMovieActionPerformed(evt);
            }
        });

        tbl_MovieData.setFont(new java.awt.Font("Ink Free", 0, 14)); // NOI18N
        tbl_MovieData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"", "", "", null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "S No", "Id", "Hall Name", "Delete"
            }
        ));
        tbl_MovieData.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_MovieDataMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbl_MovieData);

        btn_Logout1.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 3, 18)); // NOI18N
        btn_Logout1.setText("Logout");
        btn_Logout1.setBorder(new javax.swing.border.MatteBorder(null));
        btn_Logout1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_Logout1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_Logout1ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Ink Free", 3, 36)); // NOI18N
        jLabel2.setText("Movies Data");

        btn_MainView.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 3, 18)); // NOI18N
        btn_MainView.setText("Main");
        btn_MainView.setBorder(new javax.swing.border.MatteBorder(null));
        btn_MainView.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_MainView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_MainViewActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btn_MainView, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 200, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addGap(176, 176, 176)
                        .addComponent(btn_Logout1, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btn_AddMovie, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(295, 295, 295))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btn_Logout1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_MainView, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(47, 47, 47))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 225, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btn_AddMovie, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btn_AddMovieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_AddMovieActionPerformed
        // TODO add your handling code here:
        this.dispose();
        new AddMovie().setVisible(true);
    }//GEN-LAST:event_btn_AddMovieActionPerformed

    private void tbl_MovieDataMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_MovieDataMouseClicked
        // TODO add your handling code here:
        //  Utility.databaseInteraction.delteHallData((int) tbl_HallData.getModel().getValueAt(evt.getX(), 1));
        JOptionPane.showConfirmDialog(null, "Successfully Deleted", "Success", JOptionPane.DEFAULT_OPTION, JOptionPane.INFORMATION_MESSAGE);
        populateMovieData();
    }//GEN-LAST:event_tbl_MovieDataMouseClicked

    private void scaleImage(String location, JLabel label, int width, int height) {
        ImageIcon icon = new ImageIcon(location);
        Image img = icon.getImage();

        Image imgScale = img.getScaledInstance(width, height, Image.SCALE_SMOOTH);
        ImageIcon scaledIcon = new ImageIcon(imgScale);
        label.setIcon(scaledIcon);
    }

    public Object[] getObjectArray(int Sno, int id, String name, String hallName, String ticketType, String dateTime, double price, String location) {
        ImageIcon icon = new ImageIcon(location);

//table.setValueAt(icon, row, column);
        JLabel label = new JLabel("s");
        scaleImage(location, label, 30, 30);
        Image img = icon.getImage();
       
        Image imgScale = img.getScaledInstance(70, 50, Image.SCALE_SMOOTH);
        ImageIcon scaledIcon = new ImageIcon(imgScale);
        return new Object[]{
            Sno, id, name, hallName, ticketType, dateTime, price, scaledIcon, "Delete"
        };
    }

    private void populateMovieData() {
        tbl_MovieData.removeAll();
        ArrayList<Movie> movieData = Utility.databaseInteraction.getAllMoviesData();
        Object[][] data = new Object[movieData.size()][];
        for (int i = 0; i < movieData.size(); i++) {
            data[i] = getObjectArray(i + 1, movieData.get(i).getM_Id(), movieData.get(i).getM_Name(), Utility.databaseInteraction.getHallDataById(movieData.get(i).getM_HId()).getH_Name(),
                    Utility.databaseInteraction.getTicketTypeDataById(movieData.get(i).getM_TId()).getT_Name(), movieData.get(i).getM_Date() + " - " + movieData.get(i).getM_Time(),
                    movieData.get(i).getM_Price(), movieData.get(i).getM_ImagePath());
        }

        String[] columns = {
            "SNO", "Id", "Movie Name", "Hall", "T. Type", "DateTime", "Price", "Image", "Delete"
        };

        DefaultTableModel tmodel = new DefaultTableModel(data, columns) {
            @Override
            public Class getColumnClass(int column) {
                return getValueAt(0, column).getClass();
            }
        };

        tbl_MovieData.setModel(tmodel);
        tbl_MovieData.getColumn("Delete").setCellRenderer(new ViewAllMovies.ButtonRenderer());
        tbl_MovieData.getColumn("Delete").setCellEditor(new ViewAllMovies.ButtonEditor(new JCheckBox()));
        tbl_MovieData.getColumn("SNO").setMaxWidth(45);
        tbl_MovieData.getColumn("Id").setMaxWidth(45);
        tbl_MovieData.getColumn("Price").setMaxWidth(95);
        tbl_MovieData.setRowHeight(50);
    }


    private void btn_Logout1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_Logout1ActionPerformed
        // TODO add your handling code here:
        this.dispose();
        Utility.currentUsers = null;
        new Login().setVisible(true);
    }//GEN-LAST:event_btn_Logout1ActionPerformed

    private void btn_MainViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_MainViewActionPerformed
        // TODO add your handling code here:
        this.dispose();
        new MainAdminView().setVisible(true);
    }//GEN-LAST:event_btn_MainViewActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewAllMovies.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewAllMovies.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewAllMovies.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewAllMovies.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewAllMovies().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_AddMovie;
    private javax.swing.JButton btn_Logout1;
    private javax.swing.JButton btn_MainView;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbl_MovieData;
    // End of variables declaration//GEN-END:variables

    class ButtonRenderer extends JButton implements TableCellRenderer {

        public ButtonRenderer() {
            setOpaque(true);
        }

        @Override
        public Component getTableCellRendererComponent(JTable table, Object value,
                boolean isSelected, boolean hasFocus, int row, int column) {
            if (isSelected) {
                setForeground(table.getSelectionForeground());
                setBackground(table.getSelectionBackground());
            } else {
                setForeground(table.getForeground());
                setBackground(UIManager.getColor("Button.background"));
            }
            setText((value == null) ? "" : value.toString());
            return this;
        }
    }

    class ButtonEditor extends DefaultCellEditor {

        protected JButton button;
        private String label;
        private boolean isPushed;

        public ButtonEditor(JCheckBox checkBox) {
            super(checkBox);
            button = new JButton();
            button.setOpaque(true);
            button.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    fireEditingStopped();
                }
            });
        }

        @Override
        public Component getTableCellEditorComponent(JTable table, Object value,
                boolean isSelected, int row, int column) {
            if (isSelected) {
                button.setForeground(table.getSelectionForeground());
                button.setBackground(table.getSelectionBackground());
            } else {
                button.setForeground(table.getForeground());
                button.setBackground(table.getBackground());
            }
            label = (value == null) ? "" : value.toString();
            button.setText(label);
            isPushed = true;
            //   JOptionPane.showMessageDialog(button, label + ""+table.getModel().getValueAt(row, 1));
            Utility.databaseInteraction.delteMovieDataById((int) table.getModel().getValueAt(row, 1));
            return button;
        }

        @Override
        public Object getCellEditorValue() {
            if (isPushed) {
                //   JOptionPane.showMessageDialog(button, label + ": Ouch!");

            }
            isPushed = false;
            return label;
        }

        @Override
        public boolean stopCellEditing() {
            isPushed = false;
            return super.stopCellEditing();

        }
    }
}
